# Generated by Django 4.1 on 2022-08-26 07:16

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField()),
                ('featured_image', models.ImageField(default='blank-profile-picture.png', upload_to='featured_image/%Y/%m/%d/')),
                ('start_date', models.DateTimeField(auto_now=True)),
                ('end_date', models.DateTimeField(auto_now=True)),
                ('start_time', models.TimeField(blank=True, max_length=250)),
                ('end_time', models.TimeField(blank=True, max_length=250)),
                ('registration_deadline', models.DateTimeField(auto_now=True)),
                ('venue', models.CharField(max_length=250)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=250)),
                ('state', models.CharField(max_length=250)),
                ('country', models.CharField(max_length=250)),
                ('ticket_option', models.CharField(max_length=250)),
                ('onlinepayment_option', models.CharField(max_length=250)),
                ('event_images', models.ImageField(default='blank-profile-picture.png', upload_to='event_images')),
                ('organizer_name', models.CharField(max_length=250)),
                ('sponsors', models.CharField(max_length=250)),
                ('event_type', models.CharField(max_length=250)),
                ('event_topic', models.CharField(max_length=250)),
                ('listing_privacy', models.CharField(default='public', max_length=250)),
                ('remaining_tickets', models.CharField(max_length=250)),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='events.event')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.comment')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
